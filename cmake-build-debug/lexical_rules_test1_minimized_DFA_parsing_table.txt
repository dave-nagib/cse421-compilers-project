Parsing Table:
FACTOR ; -> \SYNCH 
TERM addop -> \SYNCH 
FACTOR addop -> \SYNCH 
TERM relop -> \SYNCH 
TERM ; -> \SYNCH 
SIMPLE_EXPRESSION relop -> \SYNCH 
PRIMITIVE_TYPE id -> \SYNCH 
WHILE $ -> \SYNCH 
WHILE if -> \SYNCH 
WHILE float -> \SYNCH 
WHILE int -> \SYNCH 
ASSIGNMENT $ -> \SYNCH 
ASSIGNMENT if -> \SYNCH 
FACTOR relop -> \SYNCH 
ASSIGNMENT float -> \SYNCH 
ASSIGNMENT } -> \SYNCH 
EXPRESSION ; -> \SYNCH 
IF $ -> \SYNCH 
IF float -> \SYNCH 
SIGN id -> \SYNCH 
SIGN num -> \SYNCH 
SIGN ( -> \SYNCH 
DECLARATION $ -> \SYNCH 
DECLARATION while -> \SYNCH 
DECLARATION if -> \SYNCH 
DECLARATION } -> \SYNCH 
STATEMENT $ -> \SYNCH 
STATEMENT } -> \SYNCH 
STATEMENT_LIST $ -> \SYNCH 
STATEMENT id -> ASSIGNMENT 
SIMPLE_EXPRESSION + -> SIGN TERM SIMPLE_EXPRESSION1 
SIMPLE_EXPRESSION1 addop -> addop TERM SIMPLE_EXPRESSION1 
STATEMENT_LIST int -> STATEMENT STATEMENT_LIST2 
STATEMENT_LIST float -> STATEMENT STATEMENT_LIST2 
STATEMENT_LIST while -> STATEMENT STATEMENT_LIST2 
SIMPLE_EXPRESSION ; -> \SYNCH 
METHOD_BODY if -> STATEMENT_LIST 
ASSIGNMENT int -> \SYNCH 
STATEMENT_LIST id -> STATEMENT STATEMENT_LIST2 
METHOD_BODY while -> STATEMENT_LIST 
TERM0 relop ->  
EXPRESSION3 ; ->  
STATEMENT_LIST2 id -> STATEMENT STATEMENT_LIST2 
TERM ) -> \SYNCH 
METHOD_BODY id -> STATEMENT_LIST 
SIMPLE_EXPRESSION1 relop ->  
TERM0 ) ->  
STATEMENT_LIST if -> STATEMENT STATEMENT_LIST2 
TERM id -> FACTOR TERM0 
STATEMENT_LIST2 int -> STATEMENT STATEMENT_LIST2 
METHOD_BODY int -> STATEMENT_LIST 
EXPRESSION3 relop -> relop SIMPLE_EXPRESSION 
STATEMENT_LIST2 while -> STATEMENT STATEMENT_LIST2 
SIMPLE_EXPRESSION - -> SIGN TERM SIMPLE_EXPRESSION1 
STATEMENT_LIST2 if -> STATEMENT STATEMENT_LIST2 
FACTOR num -> num 
STATEMENT_LIST2 float -> STATEMENT STATEMENT_LIST2 
METHOD_BODY float -> STATEMENT_LIST 
FACTOR ) -> \SYNCH 
EXPRESSION - -> SIMPLE_EXPRESSION EXPRESSION3 
IF int -> \SYNCH 
EXPRESSION id -> SIMPLE_EXPRESSION EXPRESSION3 
STATEMENT_LIST2 $ ->  
TERM0 ; ->  
WHILE } -> \SYNCH 
SIMPLE_EXPRESSION1 ) ->  
TERM0 mulop -> mulop FACTOR TERM0 
SIMPLE_EXPRESSION1 ; ->  
STATEMENT while -> WHILE 
FACTOR mulop -> \SYNCH 
SIGN - -> - 
SIMPLE_EXPRESSION id -> TERM SIMPLE_EXPRESSION1 
IF id -> \SYNCH 
TERM0 addop ->  
STATEMENT float -> DECLARATION 
EXPRESSION ) -> \SYNCH 
EXPRESSION3 ) ->  
SIGN + -> + 
STATEMENT if -> IF 
STATEMENT int -> DECLARATION 
DECLARATION float -> PRIMITIVE_TYPE id ; 
DECLARATION int -> PRIMITIVE_TYPE id ; 
WHILE while -> while ( EXPRESSION ) { STATEMENT } 
ASSIGNMENT id -> id = EXPRESSION ; 
IF while -> \SYNCH 
IF if -> if ( EXPRESSION ) { STATEMENT } else { STATEMENT } 
EXPRESSION + -> SIMPLE_EXPRESSION EXPRESSION3 
EXPRESSION ( -> SIMPLE_EXPRESSION EXPRESSION3 
ASSIGNMENT while -> \SYNCH 
EXPRESSION num -> SIMPLE_EXPRESSION EXPRESSION3 
FACTOR id -> id 
SIMPLE_EXPRESSION ) -> \SYNCH 
PRIMITIVE_TYPE float -> float 
PRIMITIVE_TYPE int -> int 
SIMPLE_EXPRESSION ( -> TERM SIMPLE_EXPRESSION1 
DECLARATION id -> \SYNCH 
SIMPLE_EXPRESSION num -> TERM SIMPLE_EXPRESSION1 
TERM ( -> FACTOR TERM0 
TERM num -> FACTOR TERM0 
FACTOR ( -> ( EXPRESSION ) 
WHILE id -> \SYNCH 
IF } -> \SYNCH 
METHOD_BODY $ -> \SYNCH 
